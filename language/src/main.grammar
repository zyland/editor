//!element

@top Tree { expr lineEnd }

@precedence {
  concat @left,
  mul @left,
  add @left,
  logic @left
}

expr {
    ID { Identifier }
  | String
  //| Concat { expr !concat endExpr }
  | Bin {
      expr !mul(Mul | Div) endExpr
    | expr !add(Add | Sub | Join) endExpr
    | expr !logic(Or | And) endExpr
  }
  | LogicBlock { LogicLine {!logic (Or | And) expr lineEnd}+ }
  | "(" expr ")"
}
endExpr {
    expr
  | Block
}

Block { lineEnd indent expr (dedent | eof) }

//!skip

@skip {
  spaces |
  Comment |
  blankLineStart (spaces | Comment)* lineEnd
}

//!lineEnd

lineEnd { newline | eof }

//!context

@context trackIndent from "./tokens.js"

//!externalTokens

@external tokens indentation from "./tokens.js" {
  indent
  dedent
  blankLineStart
}

//!tokens

@tokens {
  spaces { $[ \t]+ }
  newline { "\n" }
  eof { @eof }
  Comment { "#" ![\n]+ }
  Identifier { $[a-zA-Z0-9_]+ }
  String { '"' !["]* '"' }
  Add { "+" }
  Sub { "-" }
  Mul { "*" }
  Div { "/" }
  Or { "|" }
  And { "&" }
  Join { "\\" }
}